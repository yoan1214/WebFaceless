---
import { Image } from 'astro:assets';

const imageImports = import.meta.glob(
  '../assets/images/*.{jpg,jpeg,png,webp}',
  { eager: true,  import: 'default' }
);

const images = Object.entries(imageImports)
            
  .map(([_, src], i) => ({ src, alt: `Foto ${i + 1}` }));
---

<section id="galeria-carrusel" class="py-16 md:py-12 bg-blacktext-white">
  <div class="container mx-auto px-2 sm:px-4">
    <div id="horizontal-thumbnails-carousel" class="relative w-full">

     
      <div class="flex flex-col space-y-4">

        <!-- ===== Slider principal ===== -->
        <div class="relative w-full overflow-hidden rounded-lg order-1">
          <div id="carousel-body" class="relative h-72 xs:h-80 sm:h-[500px] md:h-[600px] lg:h-[700px]">
            {images.map((img, index) => (
              <div
                class:list={[
                  "carousel-slide absolute inset-0 transition-opacity duration-700 ease-in-out",
                  index === 0 ? "opacity-100 z-10" : "opacity-0 z-0 pointer-events-none"
                ]}
                data-slide-id={index}
              >
                <div class="flex size-full justify-center items-center bg-black/20">
                  <Image
                    src={img.src}
                    alt={img.alt}
                    widths={[320, 640, 960, 1280, 1920, 2560]}
                    sizes="(min-width: 1280px) 70vw, (min-width: 1024px) 60vw, 100vw"
                    quality="high"
                    loading={index === 0 ? "eager" : "lazy"}
                    class="w-full h-full object-contain"
                  />
                </div>
              </div>
            ))}
          </div>

          <!-- Controles -->
          <button
            type="button"
            id="carousel-prev"
            class="absolute top-1/2 left-2 md:left-4 -translate-y-1/2 z-20 group"
            aria-label="Anterior"
          >
            <span class="size-9 md:size-11 lg:size-12 bg-black/40 group-hover:bg-black/60 text-white flex items-center justify-center rounded-full shadow-md transition-colors duration-200">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="w-5 h-5 lg:w-6 lg:h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
              </svg>
            </span>
          </button>
          <button
            type="button"
            id="carousel-next"
            class="absolute top-1/2 right-2 md:right-4 -translate-y-1/2 z-20 group"
            aria-label="Siguiente"
          >
            <span class="size-9 md:size-11 lg:size-12 bg-black/40 group-hover:bg-black/60 text-white flex items-center justify-center rounded-full shadow-md transition-colors duration-200">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="w-5 h-5 lg:w-6 lg:h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
              </svg>
            </span>
          </button>
        </div>

        <!-- ===== Miniaturas (fila horizontal con scroll-x) ===== -->
        <div class="order-2">
          <div
            id="carousel-pagination-container"
            class="flex gap-2 md:gap-3 overflow-x-auto scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-gray-800
                   w-full px-1"
          >
            {images.map((img, index) => (
              <button
                class="carousel-pagination-item group flex-shrink-0 aspect-video w-40 md:w-48 lg:w-56 cursor-pointer rounded-md overflow-hidden"
                data-slide-to={index}
              >
                <Image
                  src={img.src}
                  alt={`Miniatura ${img.alt}`}
                  width={320}
                  densities={[1, 1.5, 2]}
                  quality="mid"
                  loading="lazy"
                  class="w-full h-full object-cover opacity-50 group-hover:opacity-75 transition-opacity duration-300 carousel-active-img:opacity-100"
                />
              </button>
            ))}
          </div>
        </div>

      </div> <!-- fin flex-col -->
    </div>
  </div>

 
<script is:inline>
  /* ---------- 1 . CAPTURA NODOS EN EL ORDEN ORIGINAL ---------- */
  const body   = document.getElementById('carousel-body');
  const thumbs = document.getElementById('carousel-pagination-container');
  const slides = [...body.children];                 // NodeList → Array
  const btns   = [...thumbs.children];
  const total  = slides.length;

  /* ---------- 2 . CREA UNA LISTA DE ÍNDICES ALEATORIA ---------- */
  const order = [...Array(total).keys()];            // [0,1,2,…]
  for (let i = total - 1; i > 0; i--) {              // Fisher–Yates
    const j = Math.floor(Math.random() * (i + 1));
    [order[i], order[j]] = [order[j], order[i]];
  }
  /* order p.ej.: [3,0,4,1,2] */

  /* ---------- 3 . SINCRONIZA VISUALMENTE LA FILA DE MINIATURAS --*/
  order.forEach((idx, pos) => {
    slides[idx].style.order = pos;   // flex-order
    btns  [idx].style.order = pos;   // la fila <div> usa flex
  });

  /* marca el primero de la lista aleatoria como activo */
  const first = order[0];
  slides.forEach((s,i) => {
    s.classList.toggle('opacity-0',      i !== first);
    s.classList.toggle('pointer-events-none', i !== first);
    s.classList.toggle('z-0',            i !== first);
    s.classList.toggle('opacity-100',    i === first);
    s.classList.toggle('z-10',           i === first);
  });
  btns.forEach((b,i) => {
    b.dataset.slideIndex = i;                    // índice real del slide
    b.querySelector('img').classList.toggle('opacity-50', i !== first);
  });

  /* ---------- 4 . FUNCIÓN PARA MOSTRAR SIGUIENTE / ANTERIOR ------*/
  let pointer = 0;                               // posición dentro de order[]

  function show(dirOrExact){
    /* dirOrExact = +1 | -1  | número exacto */
    pointer =
      typeof dirOrExact === 'number' && (dirOrExact === +1 || dirOrExact === -1)
        ? (pointer + dirOrExact + total) % total
        : order.indexOf(dirOrExact);

    const active = order[pointer];               // índice de slide a mostrar

    /* actualiza clases */
    slides.forEach((s,i) => {
      const on = i === active;
      s.classList.toggle('opacity-0',           !on);
      s.classList.toggle('pointer-events-none', !on);
      s.classList.toggle('z-0',                 !on);
      s.classList.toggle('opacity-100',          on);
      s.classList.toggle('z-10',                 on);
    });
    btns.forEach((b,i) => {
      b.querySelector('img').classList.toggle('opacity-50', i !== active);
    });

    /* desplaza la fila horizontal sólo si es necesario */
    if (thumbs.scrollWidth > thumbs.clientWidth) {
      btns[active].scrollIntoView({
        behavior: 'smooth',
        inline  : 'nearest',
        block   : 'nearest'      // sin scroll vertical
      });
    }
  }

  /* ---------- 5 . EVENTOS (flechas y miniaturas) -----------------*/
  document.getElementById('carousel-prev')
          .addEventListener('click', () => show(-1));
  document.getElementById('carousel-next')
          .addEventListener('click', () => show(+1));
  btns.forEach((b,i) =>
    b.addEventListener('click', () => show(i))
  );
</script>


</section>
